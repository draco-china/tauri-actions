name: Build and Publish

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''
          - platform: 'macos-latest'
            app: 'android'
            target: 'aarch64'
            args: ''
          - platform: 'macos-latest'
            app: 'android'
            target: 'armv7'
            args: ''
          - platform: 'macos-latest'
            app: 'android'
            target: 'i686'
            args: ''
          - platform: 'macos-latest'
            app: 'android'
            target: 'x86_64'
            args: ''
          - platform: 'macos-latest'
            app: 'android'
            args: ''
          # - platform: 'macos-latest'
          #   app: 'ios'
          #   args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

      # - name: Restore build output
      #   uses: actions/cache@v4
      #   with:
      #     path: ./out
      #     key: build-${{ github.sha }}
      #     restore-keys: |
      #       build-${{ github.sha }}
      #       build-

      - name: Release version
        run: node replace.js

      - uses: tauri-apps/tauri-action@v0
        if: ${{ matrix.app != 'android'  && matrix.app != 'ios' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          releaseId: ${{ github.event.release.id }}
          updaterJsonPreferNsis: true
          updaterJsonKeepUniversal: true
          tauriScript: pnpm tauri
          args: ${{ matrix.args }}

      - name: Set up Java JDK
        if: matrix.app == 'android'
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        if: matrix.app == 'android'
        uses: android-actions/setup-android@v3

      - name: Setup Android NDK
        if: matrix.app == 'android'
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d

      - name: export Android NDK
        if: matrix.app == 'android'
        run: echo "NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      - name: Initialize Tauri android
        if: matrix.app == 'android'
        run: |
          pnpm tauri android init
          # 配置证书
          echo "keyAlias=keystore" >> ./src-tauri/gen/android/key.properties
          echo "keyPassword=ai-display-keystore" >> ./src-tauri/gen/android/key.properties
          echo "storeFile=keystore.jks" >> ./src-tauri/gen/android/key.properties
          echo "storePassword=ai-display-keystore" >> ./src-tauri/gen/android/key.properties
          # Copy the keystore file to the android app folder
          cp ./.github/certificates/android/keystore.jks ./src-tauri/gen/android/app/keystore.jks
          cp ./.github/certificates/android/code/build.gradle.kts ./src-tauri/gen/android/app/build.gradle.kts
          # bash ./.github/certificates/android/singing.sh
          # 安卓全屏隐藏 statusBarColor
          cp ./.github/certificates/android/code/MainActivity.kt ./src-tauri/gen/android/app/src/main/java/com/display/app/MainActivity.kt
          cp ./.github/certificates/android/code/themes.xml ./src-tauri/gen/android/app/src/main/res/values/themes.xml
          cp ./.github/certificates/android/code/themes.xml ./src-tauri/gen/android/app/src/main/res/values-night/themes.xml

      - name: Build Tauri android
        if: matrix.app == 'android'
        run: pnpm tauri android build --target ${{ matrix.target }}


      - name: Get package information
        if: matrix.app == 'android'
        id: get-package-info
        run: |
          name=$(cat package.json | jq -r '.name')
          version=$(cat package.json | jq -r '.version')
          echo "::set-output name=name::$name"
          echo "::set-output name=version::$version"

      - name: Copy release files and rename
        if: matrix.app == 'android'
        run: |
          mkdir -p ./release
          cp -r ./src-tauri/gen/android/app/build/outputs/apk/universal/release/*.apk ./release/${{ steps.get-package-info.name }}_${{ steps.get-package-info.version }}_${{ matrix.target || 'universal' }}.apk
          cp -r ./src-tauri/gen/android/app/build/outputs/bundle/universalRelease/*.aab ./release/${{ steps.get-package-info.name }}_${{ steps.get-package-info.version }}_${{ matrix.target || 'universal' }}.aab

      - name: Upload release apk
        if: matrix.app == 'android'
        uses: softprops/action-gh-release@v1
        with:
          id: ${{ github.event.release.id }}
          token: ${{ secrets.GH_TOKEN }}
          files: ./release/${{ steps.get-package-info.name }}_${{ steps.get-package-info.version }}_${{ matrix.target || 'universal' }}.apk

      - name: Upload release apk
        if: matrix.app == 'android' && matrix.target == ''
        uses: softprops/action-gh-release@v1
        with:
          id: ${{ github.event.release.id }}
          token: ${{ secrets.GH_TOKEN }}
          files: ./release/${{ steps.get-package-info.name }}_${{ steps.get-package-info.version }}_${{ matrix.target || 'universal' }}.aab
